name: Backend CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build Gradle
        run:  ./gradlew clean build -x test
        env:
          DB_USERNAME: ${{ secrets.MYSQL.ID }}
          DB_PASSWORD: ${{ secrets.MYSQL.PASSWORD }}
          EMAIL_SEND_ADDRESS: ${{ secrets.EMAIL.SEND_ADDRESS }}
          EMAIL_SEND_PASSWORD: ${{ secrets.EMAIL.SEND_PASSWORD }}
          EMAIL_SMTP_HOST: ${{ secrets.EMAIL.SMTP_HOST }}
          EMAIL_SMTP_PORT: ${{ secrets.EMAIL.STMP_PORT }}
          JWT_TOKEN_SECRET_KEY: ${{ secrets.JWT_TOKEN.SECRET_KEY }}
          KAKAO_TOKEN_REDIRECT_URI: ${{ secrets.KAKAO.TOKEN_REDIRECT_URL }}

      - name: Discord notification with Build complete
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: 둥지봇
        uses: Ilshidur/action-discord@master
        with:
          args: 'Project has been built successfully'

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_ID }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: dungzi/backend
          tags: main

      - name: Copy jar file to Docker context
        run: cp ./build/libs/DunJi-BackEnd-0.0.1-SNAPSHOT.jar ./

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Discord notification with complete
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: 둥지봇
        uses: Ilshidur/action-discord@master
        with:
          args: 'Project has been deployed successfully'

#      - name: Execute CD for script
#          uses: appleboy/ssh-action@master
#          with:
#            username: ubuntu
#            host: ${{ secrets.EC2_IP }}
#            key: ${{ secrets.EC2_PASSWORD }}
#            script_stop: true
#            script: chmod +x /home/ubuntu/backend/main/deploy.sh && sh /home/ubuntu/backend/main/deploy.sh
